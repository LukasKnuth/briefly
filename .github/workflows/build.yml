name: Build and Push Docker Image

on:
  release:
    types: [published]

permissions:
  # For uploading to Github Docker Registry
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      PLATFORMS: 'linux/amd64,linux/arm64/v8'
      REGISTRY: ghcr.io
      IMAGE_NAME: lukasknuth/briefly
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
      - name: Generate Container Metadata from git
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=semver,pattern={{raw}}
          flavor: latest=true
      - uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: push
        with:
          push: true
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Sets the app-version to the Elixir compiler, see mix.exs
          build-args: |
            APP_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          # Cache the image creation via GitHub Actions Cache
          cache-from: type=gha
          cache-to: type=gha,mode=max
